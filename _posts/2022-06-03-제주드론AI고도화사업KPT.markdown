아래 섹션을 활용해 다음 단계의 액션 아이템을 나열하세요.

### 프로젝트 설명

---

드론으로 촬영된 작물, 항행장애물, 재선충의 이미지 파일을 활용하여 분류, 탐지, 분할 등 AI 딥러닝을 통해 나온 결과를 지도상에 가시화하는 웹 애플리케이션

### **KPT**

---

사실 매번 이뤄줘야하는 회고록이지만 늦게나마 작성하는 회고록으로 혼자 작성함

Keep☺️

비록 중간에 투입된 사업이긴 하지만 많은 문제점들에 좌절하지 않고 해결했다는 점이다. 그리고 처음 사용해본 라이브러리 Openlayers의 공식문서를 꼼꼼히 확인하였기에 리렌더시 객체가 사라지는 오류(가장 오랜 시간을 잡아먹은 오류)를 리액트, 리코일을 활용하여 해결하는 것이 아닌 라이브러리에서 제공하는 기능을 통해 깔끔하게 해결할 수 있었다. 또한, 파일 업로드 및 검수 부분에서 10만장 100만장 이상의 데이터를 처리할 때 배열이 아닌 Map, Set, 객체 등을 적절하게 사용하여 처리 속도를 높였다.

Problem🙈

사실 이 부분은 협업의 문제과 코드리뷰의 문제였다. 회사가 바쁘다는 이유로 계속해서 코드리뷰를 미뤘고 그러다보니 팀원의 진행속도를 알지 못하였다. 그렇게 납품 후 수정사항을 받았을 때 팀원이 기능을 만들어 놓지 않았다는 것, 그리고 그 코드에 대해 내가 아는 것이 없었다는 점. 이것은 더 큰 문제로 나에게 다가왔다. 그리고 이는 더 많은 시간을 소요하고서야 해결할 수 있었다. 이번 경험을 통해 코드리뷰의 필요성, 단순히 같은 프로젝트에서 일하는 것이 협업이 아니라는 것을 깨달았으며 또한 내가 상급자가 아닐지라도 내 목소리를 내야한다는 것을 깨달았다.

Try😄

문제점에 대한 부분을 우선 많이 노력해야할 것 같다. ( 하지만 이제 같이 일할 프론트엔트 팀원이 없다. 선임분이 프로젝트 중간에 나가셨다… 인생 😞 ) 협업이 무엇인지, 바쁜 일 속에서도 코드리뷰를 유지해야할 것 같다. 개인적으로는 단순히 코드만 짜는 것이 아닌 생각이 담긴 코드를 작성해야할 것 같다.

### 느낀점

---

<이노팸>이라는 회사에 들어와서 처음으로 진행해 본 프로젝트였다. 비록 프로젝트 중간에 투입되기도 하였고 중간에 선임 개발자분이 사라지시기도 하였지만 내 역량을 한단계 발전시킬 수 있는 기회였다고 생각한다. 완전히 처음 써본 라이브러리를 어떻게 접근하고 다뤄야하는 지를, 프로젝트에서 함수,파일,폴더,컴포넌트 이름이 왜 중요한지, 폴더 구조는 왜 중요한지, 단순히 코드만 적는 사람이 개발자가 아니라는 것을 알게해준 좋은 기회었다.
