# S3, GIT Action을 통해 배포 자동화 중 겪은 에러 정리## 1. Depenency 문제![](https://velog.velcdn.com/images/kbm940526/post/91fe72b8-1042-4067-93bd-2d46b6f12728/image.png)테스트한 프로젝트는 오래된 프로젝트라서 react 버전이 낮아서 그런지 dependency 문제가 발생- npm i --force 를 통해 해결- dependency와 맞게 버전을 맞춰 주기를 통해 해결## 2. Treating Warnings as errors because process.env.CI = true![](https://velog.velcdn.com/images/kbm940526/post/da004cff-df04-4763-b13d-30a352cf2aad/image.png)말 그대로 경고를 에러로 처리했다는 문장이다.물론 제일 좋은 건 warning을 없애는 것이 좋지만 불가한 상황은 존재하니깐process.env.CI = false로 설정해줬다.```yml		...main.yml      - name: Build        run: CI=false npm run build       ......main.yml```## 3.>A client error (SignatureDoesNotMatch) occurred when calling the CreateBucket operation: The request signature we calculated does not match the signature you provided. Check your key and signing method.위와 같은 에러가 발생한다면 yml안에 키값이 문제가 있다는 것이다.```yml        env:          AWS_ACCESS_KEY_ID: '${{ secrets.AWS_ACCESS_KEY_ID }}'          AWS_SECRET_ACCESS_KEY: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'```이 값과![](https://velog.velcdn.com/images/kbm940526/post/f01c00d3-a04d-403a-821f-f34019b8509c/image.png)여기 넣은 값 이 틀리다는 것이다.하지만 이 둘 값이 똑같아도 문제가 발생할 때가 있다.그건 두 Key값에 특수문자가 들어간 경우이다.key를 재발급 받아주면 쉽게 해결된다.[참조](https://github.com/aws/aws-cli/issues/2665)## 4. 완성![](https://velog.velcdn.com/images/kbm940526/post/980657b5-f84e-4b9c-a786-3290da7c642e/image.png)프로젝트에 문제가 없다면 짜잔 빌드가 완성되고 아름다운 녹색불이 보일 것이다.